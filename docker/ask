#!/usr/bin/python3 -W ignore::DeprecationWarning
# -*- coding:utf8 -*-

import sys
import codecs
import re
from pipelines import pipeline

if __name__ == "__main__":
    input_file = sys.argv[1]
    N = int(sys.argv[2])
    output_file = sys.argv[3]

    model = pipeline("e2e-qg", model="valhalla/t5-base-e2e-qg")
    
    with codecs.open(input_file, 'r', 'utf-8') as f:
        lines = f.readlines()
        context = ''
        for line in lines:
            line = line.strip()
            if line == '':
                continue
            context += line + ' '

    question_answer = model(context)

    with codecs.open(input_file, 'r', 'utf-8') as f:
        lines = f.readlines()
        context = ''
        for line in lines:
            line = line.strip()
            line = re.sub("[=+,;#/\?:^@*\"※~ㆍ!』‘|`\'…》\”\“\’·]","", line)
            line = re.sub(r"[一-龥]","", line)
            line = re.sub(' +', ' ', line)   
            line = re.sub("\( \)","", line) 
            line = re.sub("\(\)","", line) 
            line = re.sub("\[ \]","", line)   
            line = re.sub("\[\]","", line)  
            line = re.sub(' +', ' ', line)
            if line == '':
                continue
            context += line + ' '

    question_answer = model(context)

    i = 0
    for qa in question_answer:
        qa = qa.strip()
        if qa == '':
            continue
        print('Q' + str(i + 1) + ': ' + qa)
        i += 1
            
    with codecs.open(output_file, 'w', 'utf-8') as f:
        for qa in question_answer:
            f.write(qa + '\n')

